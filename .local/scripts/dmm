#!/usr/bin/env sh
#
# Script to (un)mount usb devices.
#

getmount() {
    [ -z "$chs" ] && exit 1
    mp="$(find "$1" -maxdepth 2 -type d | dmenu -p "Type in mount point.")"
    [ "$mp" = "" ] && exit 1

    if [ ! -d "$mp" ]; then
        mkdiryn=$(printf '%s\n%s' "No" "yes" \
            | dmenu -p "$mp does not exist. Create it?")
        [ "$mkdiryn" = "yes" ] && (mkdir -p "$mp" || sudo -A mkdir -p "$mp")
    fi
}

mountandroid() {
    chs="$(printf '%s' "$1" | dmenu -i -p "Which Android device?" \
        | cut -d : -f 1)"
    getmount "$HOME"
    simple-mtpfs --device "$chs" "$mp" && notify-send "$chs mounted to $mp."
}

mountusb() {
    chs="$(printf '%s' "$1" | dmenu -p "Mount which drive?" \
        | awk '{print $1}')"
    sudo -A mount "$chs" && notify-send "$chs mounted." && exit
    getmount "/mnt"
    sudo -A mount "$chs" "$mp" && notify-send "$chs mounted to $mp."
}

unmountandroid() {
    chs="$(awk '/simple-mtpfs/ {print $2}' /etc/mtab | dmenu -i -p "Unmount which device?")"
    [ -z "$chs" ] && exit
    sudo -A umount -l "$chs" && notify-send "$chs unmounted."
}

unmountusb() {
    [ -z "$drv" ] && exit
    chs=$(printf '%s' "$drv" | dmenu -p "Unmount which drive?" \
        | awk '{print $1}')
    [ -z "$chs" ] && exit
    sudo -A umount "$chs" && notify-send "$chs unmounted."
}

asktype() {
    chs="$(printf "USB\\nAndroid" \
        | dmenu -i -p "$1 a USB drive or Android device?")"

    case "$chs" in
        USB)
            if [ "$1" = "Mount" ]; then
                mountusb "$2"
            elif [ "$1" = "Unmount" ]; then
                unmountusb "$2"
            fi
            ;;
        Android)
            if [ "$1" = "Mount" ]; then
                mountandroid "$3"
            elif [ "$1" = "Unmount" ]; then
                unmountandroid "$2"
            fi
    esac
}

do_mount() {
    adr="$(simple-mtpfs -l 2>/dev/null)"
    udr="$(lsblk -rpo "name,type,size,mountpoint" \
        | awk '$2=="part"&&$4==""{printf "%s (%s)\n",$1,$3}')"

    if [ -z "$udr" ]; then
       [ -z "$adr" ] && \
           printf '%s\n' "No USB drive or Android device detected" && exit
       printf '%s\n' "Android device(s) detected"
       mountandroid "$adr"
    else 
        if [ -z "$adr" ]; then
          printf '%s\n' "USB drive(s) detected"
          mountusb "$udr"
        else
          printf '%s\n' "Mountable USB drive(s) and Android device(s) detected."
          asktype "Mount" "$udr" "$adr"
        fi
    fi
}

do_unmount() {
    drv="$(lsblk -nrpo "name,type,size,mountpoint" \
        | awk '$2=="part"&&$4!~/\/boot|\/home$|SWAP/&&length($4)>1{printf "%s (%s)\n",$4,$3}')"

    if ! grep simple-mtpfs /etc/mtab; then
        [ -z "$drv" ] && printf '%s\n' "No drives to unmount" && exit
        printf '%s\n' "Unmountable USB drive detected"
        unmountusb "$drv"
    else
        if [ -z "$drv" ]; then
            printf '%s\n' "No drives to unmount"
            unmountandroid "$drv"
        else
            printf '%s\n' "Unmountable USB drive detected"
            asktype "Unmount" "$drv"
        fi
    fi
}

err() {
    printf '%s\n' "$1"
    exit 1
}

usg() {
    printf '%s\n'         "usage: dmm [argument]"
    printf '\n'
    printf '%s\n'         "Argument:"
    printf '\t%s\t\t%s\n' "mount"      "- mount drive(s)"
    printf '\t%s\t\t%s\n' "umount"     "- umount drive(s)"
    printf '\t%s\t%s\n'   "-h, --help" "- display this"
    exit
}

main() {
    case "$1" in
        "mount")          do_mount ;;
        "umount")         do_unmount ;;
        ""|"-h"|"--help") usg ;;
        *)                err "$@" ;;
    esac
}

main "$@"
